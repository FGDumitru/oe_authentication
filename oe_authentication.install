<?php

/**
 * @file
 * OpenEuropa Authentication install file.
 */

declare(strict_types = 1);

use Drupal\cas\Service\CasUserManager;
use Drupal\Core\Config\FileStorage;
use Drupal\field\Entity\FieldConfig;
use Drupal\field\Entity\FieldStorageConfig;

/**
 * Implements hook_install().
 */
function oe_authentication_install(): void {

  if (\Drupal::isConfigSyncing() === FALSE) {
    // Set default settings for CAS.
    \Drupal::configFactory()->getEditable('cas.settings')
      ->set('server.hostname', 'ecas.ec.europa.eu')
      ->set('server.path', '/cas')
      ->set('server.version', '3.0')
      ->set('forced_login.enabled', TRUE)
      ->set('forced_login.paths.pages', '/user/login')
      ->set('logout.cas_logout', TRUE)
      ->set('logout.logout_destination', '<front>')
      ->set('user_accounts.prevent_normal_login', TRUE)
      ->set('user_accounts.auto_register', TRUE)
      ->set('user_accounts.restrict_password_management', TRUE)
      ->set('user_accounts.restrict_email_management', TRUE)
      // We need to add a default email domain so that we can trigger
      // the appropriate event to handle emails.
      ->set('user_accounts.email_assignment_strategy', CasUserManager::EMAIL_ASSIGNMENT_STANDARD)
      ->set('user_accounts.email_hostname', 'localhost')
      ->set('login_link_enabled', TRUE)
      ->set('login_link_label', 'EU Login')
      ->save();

    \Drupal::messenger()->addMessage('Please be aware that oe_authentication makes changes to the following configuration: CAS settings.');
  }

  _oe_update_eulogin_fields();
}

/**
 * Add custom eu login fields.
 */
function oe_authentication_update_8001(): void {
  // Start the sync for new configurations.
  $storage = new FileStorage(drupal_get_path('module', 'oe_authentication') . '/config/install');

  // New fields storage.
  $field_storages = $storage->listAll('field.storage.user');
  foreach ($field_storages as $field_storage) {
    $values = $storage->read($field_storage);
    $field_storage_config = FieldStorageConfig::create($values);
    $field_storage_config->save();
  }

  // New fields.
  $fields = $storage->listAll('field.field.user.user');
  foreach ($fields as $field) {
    $values = $storage->read($field);
    $field_config = FieldConfig::create($values);
    $field_config->save();
  }

  _oe_update_eulogin_fields();
}

/**
 * Update form display for EULogin fields.
 */
function _oe_update_eulogin_fields(): void {
  // Add custom fields to the user form.
  $properties = [
    'targetEntityType' => 'user',
    'bundle' => 'user',
  ];
  $custom_fields = [
    '7' => 'field_oe_firstname',
    '8' => 'field_oe_lastname',
    '9' => 'field_oe_department',
    '10' => 'field_oe_organisation',
  ];
  if ($form_display = reset(\Drupal::entityTypeManager()->getStorage('entity_form_display')->loadByProperties($properties))) {
    foreach ($custom_fields as $weight => $custom_field) {
      $form_display->setComponent($custom_field, [
        'type' => 'string_textfield',
        'region' => 'content',
        'weight' => $weight,
        'settings' => [
          'size' => '60',
          'placeholder' => '',
        ],
      ])->save();
    }
  }
}
